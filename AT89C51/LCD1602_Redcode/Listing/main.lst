C51 COMPILER V9.56.0.0   MAIN                                                              03/11/2018 16:29:28 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: D:\Program Files\AT89C51\C51\BIN\C51.EXE ..\User\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User) DE
                    -BUG OBJECTEXTEND PRINT(..\Listing\main.lst) TABS(8) OBJECT(..\Output\main.obj)

line level    source

   1          
   2          #include<reg51.h>
   3          #include"lcd.h"
   4          
   5          sbit IRIN=P3^2;
   6          
   7          unsigned char code CDIS1[13]={" Red Control "};
   8          unsigned char code CDIS2[13]={" IR-CODE:--H "};
   9          unsigned char IrValue[6];
  10          unsigned char Time;
  11          void IrInit();
  12          void DelayMs(unsigned int );
  13          /*******************************************************************************
  14          * 函数名         : main
  15          * 函数功能       : 主函数
  16          * 输入           : 无
  17          * 输出           : 无
  18          *******************************************************************************/
  19          
  20          void main()
  21          {
  22   1              unsigned char i;
  23   1              IrInit(); 
  24   1              LcdInit();
  25   1              LcdWriteCom(0x80);
  26   1              for(i=0;i<13;i++)
  27   1              {
  28   2                      LcdWriteData(CDIS1[i]); 
  29   2              }
  30   1              LcdWriteCom(0x80+0x40);
  31   1              for(i=0;i<13;i++)
  32   1              {
  33   2                      LcdWriteData(CDIS2[i]); 
  34   2              }
  35   1              while(1)
  36   1              {
  37   2                      IrValue[4]=IrValue[2]>>4;       //高位
  38   2                      IrValue[5]=IrValue[2]&0x0f;     //低位 
  39   2                      if(IrValue[4]>9)
  40   2                      {
  41   3                              LcdWriteCom(0xc0+0x09); //设置显示位置
  42   3                              LcdWriteData(0x37+IrValue[4]); //将数值转换为该显示的ASCII码
  43   3                      }
  44   2                      else
  45   2                      {
  46   3                              LcdWriteCom(0xc0+0x09);
  47   3                              LcdWriteData(IrValue[4]+0x30); //将数值转换为该显示的ASCII码
  48   3                      } 
  49   2                      if(IrValue[5]>9)
  50   2                      {
  51   3                              LcdWriteCom(0xc0+0x0a);
  52   3                              LcdWriteData(IrValue[5]+0x37);          //将数值转换为该显示的ASCII码
  53   3                      }
  54   2                      else
C51 COMPILER V9.56.0.0   MAIN                                                              03/11/2018 16:29:28 PAGE 2   

  55   2                      {
  56   3                              LcdWriteCom(0xc0+0x0a);
  57   3                              LcdWriteData(IrValue[5]+0x30);  //将数值转换为该显示的ASCII码
  58   3                      }       
  59   2              }
  60   1      }       
  61          /*******************************************************************************
  62          * 函数名         : DelayMs()
  63          * 函数功能          : 延时
  64          * 输入           : x
  65          * 输出            : 无
  66          *******************************************************************************/
  67          
  68          void DelayMs(unsigned int x)   //0.14ms误差 0us
  69          {
  70   1              unsigned char i;
  71   1              while(x--)
  72   1              {
  73   2                      for (i = 0; i<13; i++);
  74   2                      
  75   2              }
  76   1      }
  77          /*******************************************************************************
  78          * 函数名         : IrInit()
  79          * 函数功能          : 初始化红外线接收
  80          * 输入           : 无
  81          * 输出           : 无
  82          *******************************************************************************/
  83          
  84          void IrInit()
  85          {
  86   1              IT0=1;//下降沿触发
  87   1              EX0=1;//打开中断0允许
  88   1              EA=1;   //打开总中断
  89   1      
  90   1              IRIN=1;//初始化端口
  91   1      }
  92          /*******************************************************************************
  93          * 函数名         : ReadIr()
  94          * 函数功能          : 读取红外数值的中断函数
  95          * 输入           : 无
  96          * 输出           : 无
  97          *******************************************************************************/
  98          
  99          void ReadIr() interrupt 0
 100          {
 101   1              unsigned char j,k;
 102   1              unsigned int err;
 103   1              Time=0; 
 104   1              DelayMs(70);
 105   1      
 106   1              if(IRIN==0)     //确认是否真的接收到正确的信号
 107   1              {       
 108   2                      
 109   2                      err=1000;       //1000*10us=10ms,超过说明接收到错误的信号
 110   2                      /*当两个条件都为真是循环，如果有一个条件为假的时候跳出循环，免得程序出错的时
 111   2                      侯，程序死在这里*/      
 112   2                      while((IRIN==0)&&(err>0))       //等待前面9ms的低电平过去 
 113   2                      {       
 114   3                              DelayMs(1);
 115   3                              err--;
 116   3                      } 
C51 COMPILER V9.56.0.0   MAIN                                                              03/11/2018 16:29:28 PAGE 3   

 117   2                      if(IRIN==1)     //如果正确等到9ms低电平
 118   2                      {
 119   3                              err=500;
 120   3                              while((IRIN==1)&&(err>0))       //等待4.5ms的起始高电平过去
 121   3                              {
 122   4                                      DelayMs(1);
 123   4                                      err--;
 124   4                              }
 125   3                              for(k=0;k<4;k++)        //共有4组数据
 126   3                              {       
 127   4                                      for(j=0;j<8;j++)        //接收一组数据
 128   4                                      {
 129   5      
 130   5                                              err=60; 
 131   5                                              while((IRIN==0)&&(err>0))//等待信号前面的560us低电平过去
 132   5              //      while (!IRIN)
 133   5                                              {
 134   6                                                      DelayMs(1);
 135   6                                                      err--;
 136   6                                              }
 137   5                                              err=500;
 138   5                                              while((IRIN==1)&&(err>0))       //计算高电平的时间长度。
 139   5                                              {
 140   6                                                      DelayMs(1);//0.14ms
 141   6                                                      Time++;
 142   6                                                      err--;
 143   6                                                      if(Time>30)
 144   6                                                      {
 145   7                                                              EX0=1;
 146   7                                                              return;
 147   7                                                      }
 148   6                                              }
 149   5                                              IrValue[k]>>=1;  //k表示第几组数据
 150   5                                              if(Time>=8)     //如果高电平出现大于565us，那么是1
 151   5                                              {
 152   6                                                      IrValue[k]|=0x80;
 153   6                                              }
 154   5                                              Time=0; //用完时间要重新赋值     
 155   5                                      }
 156   4                              }
 157   3                      }
 158   2                      if(IrValue[2]!=~IrValue[3])
 159   2                      {
 160   3                              return;
 161   3                      }
 162   2              }       
 163   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    421    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
